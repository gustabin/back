package ar.com.santanderrio.obp.generated.webservices.billetera.admcbu;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.6
 * 2015-10-14T17:17:04.610-03:00
 * Generated source version: 2.7.6
 * 
 */
@WebServiceClient(name = "AdministrarCBUBancos", 
                  wsdlLocation = "AdministrarCBUBancos.xml",
                  targetNamespace = "http://billetera.prismamp.com.ar/administrarCBUBancos/") 
public class AdministrarCBUBancos_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://billetera.prismamp.com.ar/administrarCBUBancos/", "AdministrarCBUBancos");
    public final static QName AdministrarCBUBancosHttpsSoap12Endpoint = new QName("http://billetera.prismamp.com.ar/administrarCBUBancos/", "AdministrarCBUBancosHttpsSoap12Endpoint");
    public final static QName AdministrarCBUBancosHttpSoap11Endpoint = new QName("http://billetera.prismamp.com.ar/administrarCBUBancos/", "AdministrarCBUBancosHttpSoap11Endpoint");
    public final static QName AdministrarCBUBancosHttpsSoap11Endpoint = new QName("http://billetera.prismamp.com.ar/administrarCBUBancos/", "AdministrarCBUBancosHttpsSoap11Endpoint");
    public final static QName AdministrarCBUBancosHttpSoap12Endpoint = new QName("http://billetera.prismamp.com.ar/administrarCBUBancos/", "AdministrarCBUBancosHttpSoap12Endpoint");
    static {
        URL url = AdministrarCBUBancos_Service.class.getResource("AdministrarCBUBancos.xml");
        if (url == null) {
            url = AdministrarCBUBancos_Service.class.getClassLoader().getResource("AdministrarCBUBancos.xml");
        } 
        if (url == null) {
            java.util.logging.Logger.getLogger(AdministrarCBUBancos_Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "AdministrarCBUBancos.xml");
        }       
        WSDL_LOCATION = url;
    }

    public AdministrarCBUBancos_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AdministrarCBUBancos_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AdministrarCBUBancos_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns AdministrarCBUBancosPortType
     */
    @WebEndpoint(name = "AdministrarCBUBancosHttpsSoap12Endpoint")
    public AdministrarCBUBancosPortType getAdministrarCBUBancosHttpsSoap12Endpoint() {
        return super.getPort(AdministrarCBUBancosHttpsSoap12Endpoint, AdministrarCBUBancosPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AdministrarCBUBancosPortType
     */
    @WebEndpoint(name = "AdministrarCBUBancosHttpsSoap12Endpoint")
    public AdministrarCBUBancosPortType getAdministrarCBUBancosHttpsSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(AdministrarCBUBancosHttpsSoap12Endpoint, AdministrarCBUBancosPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AdministrarCBUBancosPortType
     */
    @WebEndpoint(name = "AdministrarCBUBancosHttpSoap11Endpoint")
    public AdministrarCBUBancosPortType getAdministrarCBUBancosHttpSoap11Endpoint() {
        return super.getPort(AdministrarCBUBancosHttpSoap11Endpoint, AdministrarCBUBancosPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AdministrarCBUBancosPortType
     */
    @WebEndpoint(name = "AdministrarCBUBancosHttpSoap11Endpoint")
    public AdministrarCBUBancosPortType getAdministrarCBUBancosHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(AdministrarCBUBancosHttpSoap11Endpoint, AdministrarCBUBancosPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AdministrarCBUBancosPortType
     */
    @WebEndpoint(name = "AdministrarCBUBancosHttpsSoap11Endpoint")
    public AdministrarCBUBancosPortType getAdministrarCBUBancosHttpsSoap11Endpoint() {
        return super.getPort(AdministrarCBUBancosHttpsSoap11Endpoint, AdministrarCBUBancosPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AdministrarCBUBancosPortType
     */
    @WebEndpoint(name = "AdministrarCBUBancosHttpsSoap11Endpoint")
    public AdministrarCBUBancosPortType getAdministrarCBUBancosHttpsSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(AdministrarCBUBancosHttpsSoap11Endpoint, AdministrarCBUBancosPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AdministrarCBUBancosPortType
     */
    @WebEndpoint(name = "AdministrarCBUBancosHttpSoap12Endpoint")
    public AdministrarCBUBancosPortType getAdministrarCBUBancosHttpSoap12Endpoint() {
        return super.getPort(AdministrarCBUBancosHttpSoap12Endpoint, AdministrarCBUBancosPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AdministrarCBUBancosPortType
     */
    @WebEndpoint(name = "AdministrarCBUBancosHttpSoap12Endpoint")
    public AdministrarCBUBancosPortType getAdministrarCBUBancosHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(AdministrarCBUBancosHttpSoap12Endpoint, AdministrarCBUBancosPortType.class, features);
    }

}
