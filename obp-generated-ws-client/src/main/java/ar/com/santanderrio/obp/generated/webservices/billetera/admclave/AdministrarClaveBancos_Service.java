package ar.com.santanderrio.obp.generated.webservices.billetera.admclave;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.6
 * 2015-10-14T17:18:10.130-03:00
 * Generated source version: 2.7.6
 * 
 */
@WebServiceClient(name = "AdministrarClaveBancos", 
                  wsdlLocation = "AdministrarClaveBancos.xml",
                  targetNamespace = "http://billetera.prismamp.com.ar/AdministrarClaveBancos/") 
public class AdministrarClaveBancos_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://billetera.prismamp.com.ar/AdministrarClaveBancos/", "AdministrarClaveBancos");
    public final static QName AdministrarClaveBancosHttpsSoap12Endpoint = new QName("http://billetera.prismamp.com.ar/AdministrarClaveBancos/", "AdministrarClaveBancosHttpsSoap12Endpoint");
    public final static QName AdministrarClaveBancosHttpsSoap11Endpoint = new QName("http://billetera.prismamp.com.ar/AdministrarClaveBancos/", "AdministrarClaveBancosHttpsSoap11Endpoint");
    public final static QName AdministrarClaveBancosHttpSoap11Endpoint = new QName("http://billetera.prismamp.com.ar/AdministrarClaveBancos/", "AdministrarClaveBancosHttpSoap11Endpoint");
    public final static QName AdministrarClaveBancosHttpSoap12Endpoint = new QName("http://billetera.prismamp.com.ar/AdministrarClaveBancos/", "AdministrarClaveBancosHttpSoap12Endpoint");
    static {
        URL url = AdministrarClaveBancos_Service.class.getResource("AdministrarClaveBancos.xml");
        if (url == null) {
            url = AdministrarClaveBancos_Service.class.getClassLoader().getResource("AdministrarClaveBancos.xml");
        } 
        if (url == null) {
            java.util.logging.Logger.getLogger(AdministrarClaveBancos_Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "AdministrarClaveBancos.xml");
        }       
        WSDL_LOCATION = url;
    }

    public AdministrarClaveBancos_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AdministrarClaveBancos_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AdministrarClaveBancos_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns AdministrarClaveBancosPortType
     */
    @WebEndpoint(name = "AdministrarClaveBancosHttpsSoap12Endpoint")
    public AdministrarClaveBancosPortType getAdministrarClaveBancosHttpsSoap12Endpoint() {
        return super.getPort(AdministrarClaveBancosHttpsSoap12Endpoint, AdministrarClaveBancosPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AdministrarClaveBancosPortType
     */
    @WebEndpoint(name = "AdministrarClaveBancosHttpsSoap12Endpoint")
    public AdministrarClaveBancosPortType getAdministrarClaveBancosHttpsSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(AdministrarClaveBancosHttpsSoap12Endpoint, AdministrarClaveBancosPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AdministrarClaveBancosPortType
     */
    @WebEndpoint(name = "AdministrarClaveBancosHttpsSoap11Endpoint")
    public AdministrarClaveBancosPortType getAdministrarClaveBancosHttpsSoap11Endpoint() {
        return super.getPort(AdministrarClaveBancosHttpsSoap11Endpoint, AdministrarClaveBancosPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AdministrarClaveBancosPortType
     */
    @WebEndpoint(name = "AdministrarClaveBancosHttpsSoap11Endpoint")
    public AdministrarClaveBancosPortType getAdministrarClaveBancosHttpsSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(AdministrarClaveBancosHttpsSoap11Endpoint, AdministrarClaveBancosPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AdministrarClaveBancosPortType
     */
    @WebEndpoint(name = "AdministrarClaveBancosHttpSoap11Endpoint")
    public AdministrarClaveBancosPortType getAdministrarClaveBancosHttpSoap11Endpoint() {
        return super.getPort(AdministrarClaveBancosHttpSoap11Endpoint, AdministrarClaveBancosPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AdministrarClaveBancosPortType
     */
    @WebEndpoint(name = "AdministrarClaveBancosHttpSoap11Endpoint")
    public AdministrarClaveBancosPortType getAdministrarClaveBancosHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(AdministrarClaveBancosHttpSoap11Endpoint, AdministrarClaveBancosPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AdministrarClaveBancosPortType
     */
    @WebEndpoint(name = "AdministrarClaveBancosHttpSoap12Endpoint")
    public AdministrarClaveBancosPortType getAdministrarClaveBancosHttpSoap12Endpoint() {
        return super.getPort(AdministrarClaveBancosHttpSoap12Endpoint, AdministrarClaveBancosPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AdministrarClaveBancosPortType
     */
    @WebEndpoint(name = "AdministrarClaveBancosHttpSoap12Endpoint")
    public AdministrarClaveBancosPortType getAdministrarClaveBancosHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(AdministrarClaveBancosHttpSoap12Endpoint, AdministrarClaveBancosPortType.class, features);
    }

}
